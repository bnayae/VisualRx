<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Reactive.Contrib.Monitoring.WcfQueuedPlugin</name>
    </assembly>
    <members>
        <member name="T:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy">
            <summary>
            Send monitor info through WCF queued channel
            </summary>
        </member>
        <member name="F:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.KIND">
            <summary>
            the kind of VisualRxWcfQueuedProxy
            </summary>
        </member>
        <member name="F:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.DefaultQueuePath">
            <summary>
            Default Queue Path
            </summary>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.#ctor(System.ServiceModel.NetMsmqBinding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="P:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Kind">
            <summary>
            Gets the proxy kind.
            </summary>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.OnBulkSend(System.Collections.Generic.IEnumerable{System.Reactive.Contrib.Monitoring.Contracts.MarbleBase})">
            <summary>
            Send a balk.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.OnInitialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Create">
            <summary>
            Creates proxy.
            </summary>
            <returns></returns>
            <remarks>the default message's time to live is 30 minutes</remarks>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Create(System.TimeSpan)">
            <summary>
            Creates the specified time to live.
            </summary>
            <param name="timeToLive">The time to live.</param>
            <returns></returns>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Create(System.ServiceModel.NetMsmqBinding)">
            <summary>
            Creates the specified binding.
            </summary>
            <param name="binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Create(System.ServiceModel.NetMsmqBinding,System.String)">
            <summary>
            Creates the specified binding.
            </summary>
            <param name="binding">The binding.</param>
            <param name="queuePath">The queue path.</param>
            <returns></returns>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Create(System.ServiceModel.NetMsmqBinding,System.ServiceModel.EndpointAddress)">
            <summary>
            Creates the specified binding.
            </summary>
            <param name="binding">The binding.</param>
            <param name="endpoint">The endpoint.</param>
            <returns></returns>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposed"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory">
            <summary>
            Proxy
            </summary>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory.Send(System.Reactive.Contrib.Monitoring.Contracts.MarbleBase[])">
            <summary>
            Sends the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory.Ping">
            <summary>
            Pings this instance.
            </summary>
        </member>
        <member name="P:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory.Endpoint">
            <summary>
            Gets the endpoint.
            </summary>
            <value>
            The endpoint.
            </value>
        </member>
        <member name="M:System.Reactive.Contrib.Monitoring.VisualRxWcfQueuedProxy.ProxyFactory.GetProxy(System.ServiceModel.ChannelFactory{System.Reactive.Contrib.Monitoring.Contracts.IVisualRxServiceAdapterAsync})">
            <summary>
            Gets the proxy.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
