<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.serviceModel>
    <services>
      <service name="System.Reactive.Contrib.Monitoring.UI.MonitorServiceAdapter">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:6017/" />
            <add baseAddress="net.tcp://localhost:7017/" />
            <add baseAddress="net.pipe://localhost/" />
          </baseAddresses>
        </host>

        <!-- used by VisualRxWcfQueuedProxy -->
        <!--<endpoint address="net.msmq://localhost/private/VisualRx" binding="netMsmqBinding"
                  bindingConfiguration="netMsmq"
                  contract="System.Reactive.Contrib.Monitoring.Contracts.IVisualRxServiceAdapter" />-->
        
        <!-- used by VisualRxWcfFixedAddressProxy -->
        <endpoint address="VisualRx" binding="basicHttpBinding" contract="System.Reactive.Contrib.Monitoring.Contracts.IVisualRxServiceAdapter" />

        <!-- used by VisualRxWcfDiscoveryProxy -->
        <!--<endpoint name="tcpMonitor" address="Monitor"
                  binding="netTcpBinding"
                  contract="System.Reactive.Contrib.Monitoring.Contracts.IVisualRxServiceAdapter"/>-->
        <!-- used by VisualRxWcfDiscoveryProxy -->
        <endpoint name="namepipeMonitor" address="Monitor" binding="netNamedPipeBinding" contract="System.Reactive.Contrib.Monitoring.Contracts.IVisualRxServiceAdapter" />

        <!-- Discovery end point -->
        <!--<endpoint name="udpDiscovery" kind="udpDiscoveryEndpoint"/>-->
        <endpoint name="udpDiscovery" kind="udpDiscoveryEndpoint" endpointConfiguration="adhocDiscoveryEndpointConfiguration" />
      </service>
    </services>
    <bindings>
      <netMsmqBinding>
        <binding name="netMsmq" exactlyOnce="false" durable="false">
          <security mode="None" />
        </binding>
      </netMsmqBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="True" />
          <serviceDebug includeExceptionDetailInFaults="False" />

          <!-- Discovery behavior -->
          <serviceDiscovery>
            <announcementEndpoints>
              <!-- Announcement Endpoint Adding an announcement
              endpoint to the discovery service behavior creates
              a default announcement client for the service.
              This guarantees that the service will send an
              online and offline announcement when the
              service is opened and closed respectively. -->
              <endpoint kind="udpAnnouncementEndpoint" />
            </announcementEndpoints>
          </serviceDiscovery>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <standardEndpoints>
      <udpDiscoveryEndpoint>
        <!-- modify the udpDiscoveryEndpoint -->
        <standardEndpoint name="adhocDiscoveryEndpointConfiguration" maxResponseDelay="00:00:00.001" />
      </udpDiscoveryEndpoint>
    </standardEndpoints>
  </system.serviceModel>
  
  <system.diagnostics>
    <sources>
      <!-- Visual Rx TraceSource publication -->
      <source name="VisualRx" switchName="defaultswitch">
        <listeners>
          <!--<remove name="Default"/>-->
          <!--<add name="consoleListener" />-->
          <!--<add name="xmlFileMonitorListener"/>-->
          <!--<add name="customListener"/>-->
        </listeners>
      </source>
      <!-- general Visual Rx internal trace-->
      <source name="VisualRx.Log" switchValue="Warning">
        <listeners>
          <remove name="Default" />
          <add name="eventlogListener" />
          <!--<add name="textFileListener"/>-->
        </listeners>
      </source>
    </sources>
    <switches>
      <!-- Critical, Error, Warning, Information, Verbose
           ActivityTracing: Start, Stop, Suspend, Resume, Transfer
      -->
      <add name="defaultswitch" value="Verbose" />
    </switches>
    <sharedListeners>
      <add name="customListener" type="System.Reactive.Contrib.TestMonitor.CustomTraceListener,System.Reactive.Contrib.TestMonitor" traceOutputOptions="ProcessId, DateTime" />
      <add name="consoleListener" type="System.Diagnostics.ConsoleTraceListener" traceOutputOptions="ProcessId, DateTime" />
      <add name="eventlogListener" type="System.Diagnostics.EventLogTraceListener" initializeData="Application">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Error" />
      </add>
      <add name="textFileListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="RxContrib.log" />
      <add name="xmlFileMonitorListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="Monitor.xml" />
      <add name="defaultListener" type="System.Diagnostics.DefaultTraceListener" traceOutputOptions="ProcessId" />
      <!--<add name="nlog" type="NLog.NLogTraceListener, NLog" />-->
    </sharedListeners>
  </system.diagnostics>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Interfaces" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.5.0" newVersion="2.2.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Core" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.5.0" newVersion="2.2.5.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Linq" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.5.0" newVersion="2.2.5.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
